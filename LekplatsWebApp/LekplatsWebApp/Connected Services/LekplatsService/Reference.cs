//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LekplatsWebApp.LekplatsService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LekplatsFullständigData", Namespace="http://schemas.datacontract.org/2004/07/LekplatsService")]
    [System.SerializableAttribute()]
    public partial class LekplatsFullständigData : LekplatsWebApp.LekplatsService.LekplatsData {
        
        private int lekplatsIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private LekplatsWebApp.LekplatsService.MedelBetygData medelbetygField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int lekplatsId {
            get {
                return this.lekplatsIdField;
            }
            set {
                if ((this.lekplatsIdField.Equals(value) != true)) {
                    this.lekplatsIdField = value;
                    this.RaisePropertyChanged("lekplatsId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public LekplatsWebApp.LekplatsService.MedelBetygData medelbetyg {
            get {
                return this.medelbetygField;
            }
            set {
                if ((object.ReferenceEquals(this.medelbetygField, value) != true)) {
                    this.medelbetygField = value;
                    this.RaisePropertyChanged("medelbetyg");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LekplatsData", Namespace="http://schemas.datacontract.org/2004/07/LekplatsService")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(LekplatsWebApp.LekplatsService.LekplatsFullständigData))]
    public partial class LekplatsData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string adressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string beskrivningField;
        
        private string[] lekutrustningField;
        
        private int[] målgruppField;
        
        private string namnField;
        
        private string områdeField;
        
        private string[] tillgänglighetField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string adress {
            get {
                return this.adressField;
            }
            set {
                if ((object.ReferenceEquals(this.adressField, value) != true)) {
                    this.adressField = value;
                    this.RaisePropertyChanged("adress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string beskrivning {
            get {
                return this.beskrivningField;
            }
            set {
                if ((object.ReferenceEquals(this.beskrivningField, value) != true)) {
                    this.beskrivningField = value;
                    this.RaisePropertyChanged("beskrivning");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string[] lekutrustning {
            get {
                return this.lekutrustningField;
            }
            set {
                if ((object.ReferenceEquals(this.lekutrustningField, value) != true)) {
                    this.lekutrustningField = value;
                    this.RaisePropertyChanged("lekutrustning");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int[] målgrupp {
            get {
                return this.målgruppField;
            }
            set {
                if ((object.ReferenceEquals(this.målgruppField, value) != true)) {
                    this.målgruppField = value;
                    this.RaisePropertyChanged("målgrupp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string namn {
            get {
                return this.namnField;
            }
            set {
                if ((object.ReferenceEquals(this.namnField, value) != true)) {
                    this.namnField = value;
                    this.RaisePropertyChanged("namn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string område {
            get {
                return this.områdeField;
            }
            set {
                if ((object.ReferenceEquals(this.områdeField, value) != true)) {
                    this.områdeField = value;
                    this.RaisePropertyChanged("område");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string[] tillgänglighet {
            get {
                return this.tillgänglighetField;
            }
            set {
                if ((object.ReferenceEquals(this.tillgänglighetField, value) != true)) {
                    this.tillgänglighetField = value;
                    this.RaisePropertyChanged("tillgänglighet");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MedelBetygData", Namespace="http://schemas.datacontract.org/2004/07/LekplatsService")]
    [System.SerializableAttribute()]
    public partial class MedelBetygData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int antalRösterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double renlighetMedelbetygField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double skojfaktorMedelbetygField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double totalMedelbetygField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double trygghetMedelbetygField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int antalRöster {
            get {
                return this.antalRösterField;
            }
            set {
                if ((this.antalRösterField.Equals(value) != true)) {
                    this.antalRösterField = value;
                    this.RaisePropertyChanged("antalRöster");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double renlighetMedelbetyg {
            get {
                return this.renlighetMedelbetygField;
            }
            set {
                if ((this.renlighetMedelbetygField.Equals(value) != true)) {
                    this.renlighetMedelbetygField = value;
                    this.RaisePropertyChanged("renlighetMedelbetyg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double skojfaktorMedelbetyg {
            get {
                return this.skojfaktorMedelbetygField;
            }
            set {
                if ((this.skojfaktorMedelbetygField.Equals(value) != true)) {
                    this.skojfaktorMedelbetygField = value;
                    this.RaisePropertyChanged("skojfaktorMedelbetyg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double totalMedelbetyg {
            get {
                return this.totalMedelbetygField;
            }
            set {
                if ((this.totalMedelbetygField.Equals(value) != true)) {
                    this.totalMedelbetygField = value;
                    this.RaisePropertyChanged("totalMedelbetyg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double trygghetMedelbetyg {
            get {
                return this.trygghetMedelbetygField;
            }
            set {
                if ((this.trygghetMedelbetygField.Equals(value) != true)) {
                    this.trygghetMedelbetygField = value;
                    this.RaisePropertyChanged("trygghetMedelbetyg");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IndividuelltBetygData", Namespace="http://schemas.datacontract.org/2004/07/LekplatsService")]
    [System.SerializableAttribute()]
    public partial class IndividuelltBetygData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime datumField;
        
        private int lekplatsIdField;
        
        private int renlighetBetygField;
        
        private int skojfaktorBetygField;
        
        private int trygghetBetygField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime datum {
            get {
                return this.datumField;
            }
            set {
                if ((this.datumField.Equals(value) != true)) {
                    this.datumField = value;
                    this.RaisePropertyChanged("datum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int lekplatsId {
            get {
                return this.lekplatsIdField;
            }
            set {
                if ((this.lekplatsIdField.Equals(value) != true)) {
                    this.lekplatsIdField = value;
                    this.RaisePropertyChanged("lekplatsId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int renlighetBetyg {
            get {
                return this.renlighetBetygField;
            }
            set {
                if ((this.renlighetBetygField.Equals(value) != true)) {
                    this.renlighetBetygField = value;
                    this.RaisePropertyChanged("renlighetBetyg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int skojfaktorBetyg {
            get {
                return this.skojfaktorBetygField;
            }
            set {
                if ((this.skojfaktorBetygField.Equals(value) != true)) {
                    this.skojfaktorBetygField = value;
                    this.RaisePropertyChanged("skojfaktorBetyg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int trygghetBetyg {
            get {
                return this.trygghetBetygField;
            }
            set {
                if ((this.trygghetBetygField.Equals(value) != true)) {
                    this.trygghetBetygField = value;
                    this.RaisePropertyChanged("trygghetBetyg");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="LekplatsService.ILekplatsService")]
    public interface ILekplatsService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILekplatsService/GetAllaLekplatser", ReplyAction="http://tempuri.org/ILekplatsService/GetAllaLekplatserResponse")]
        LekplatsWebApp.LekplatsService.LekplatsFullständigData[] GetAllaLekplatser();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILekplatsService/GetAllaLekplatser", ReplyAction="http://tempuri.org/ILekplatsService/GetAllaLekplatserResponse")]
        System.Threading.Tasks.Task<LekplatsWebApp.LekplatsService.LekplatsFullständigData[]> GetAllaLekplatserAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILekplatsService/GetLekplatsData", ReplyAction="http://tempuri.org/ILekplatsService/GetLekplatsDataResponse")]
        LekplatsWebApp.LekplatsService.LekplatsFullständigData GetLekplatsData(int lekplatsId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILekplatsService/GetLekplatsData", ReplyAction="http://tempuri.org/ILekplatsService/GetLekplatsDataResponse")]
        System.Threading.Tasks.Task<LekplatsWebApp.LekplatsService.LekplatsFullständigData> GetLekplatsDataAsync(int lekplatsId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILekplatsService/GetLekplatserFrånOmråde", ReplyAction="http://tempuri.org/ILekplatsService/GetLekplatserFrånOmrådeResponse")]
        LekplatsWebApp.LekplatsService.LekplatsFullständigData[] GetLekplatserFrånOmråde(string område);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILekplatsService/GetLekplatserFrånOmråde", ReplyAction="http://tempuri.org/ILekplatsService/GetLekplatserFrånOmrådeResponse")]
        System.Threading.Tasks.Task<LekplatsWebApp.LekplatsService.LekplatsFullständigData[]> GetLekplatserFrånOmrådeAsync(string område);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILekplatsService/SkapaLekplats", ReplyAction="http://tempuri.org/ILekplatsService/SkapaLekplatsResponse")]
        bool SkapaLekplats(LekplatsWebApp.LekplatsService.LekplatsData nyLekplats);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILekplatsService/SkapaLekplats", ReplyAction="http://tempuri.org/ILekplatsService/SkapaLekplatsResponse")]
        System.Threading.Tasks.Task<bool> SkapaLekplatsAsync(LekplatsWebApp.LekplatsService.LekplatsData nyLekplats);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILekplatsService/SättBetyg", ReplyAction="http://tempuri.org/ILekplatsService/SättBetygResponse")]
        bool SättBetyg(LekplatsWebApp.LekplatsService.IndividuelltBetygData betyg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILekplatsService/SättBetyg", ReplyAction="http://tempuri.org/ILekplatsService/SättBetygResponse")]
        System.Threading.Tasks.Task<bool> SättBetygAsync(LekplatsWebApp.LekplatsService.IndividuelltBetygData betyg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILekplatsService/GetAllaOmråden", ReplyAction="http://tempuri.org/ILekplatsService/GetAllaOmrådenResponse")]
        string[] GetAllaOmråden();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILekplatsService/GetAllaOmråden", ReplyAction="http://tempuri.org/ILekplatsService/GetAllaOmrådenResponse")]
        System.Threading.Tasks.Task<string[]> GetAllaOmrådenAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILekplatsService/TaBortLekplats", ReplyAction="http://tempuri.org/ILekplatsService/TaBortLekplatsResponse")]
        bool TaBortLekplats(int LekplatsId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILekplatsService/TaBortLekplats", ReplyAction="http://tempuri.org/ILekplatsService/TaBortLekplatsResponse")]
        System.Threading.Tasks.Task<bool> TaBortLekplatsAsync(int LekplatsId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILekplatsService/UppdateraLekplats", ReplyAction="http://tempuri.org/ILekplatsService/UppdateraLekplatsResponse")]
        bool UppdateraLekplats(LekplatsWebApp.LekplatsService.LekplatsFullständigData inputLekplats);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILekplatsService/UppdateraLekplats", ReplyAction="http://tempuri.org/ILekplatsService/UppdateraLekplatsResponse")]
        System.Threading.Tasks.Task<bool> UppdateraLekplatsAsync(LekplatsWebApp.LekplatsService.LekplatsFullständigData inputLekplats);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILekplatsServiceChannel : LekplatsWebApp.LekplatsService.ILekplatsService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LekplatsServiceClient : System.ServiceModel.ClientBase<LekplatsWebApp.LekplatsService.ILekplatsService>, LekplatsWebApp.LekplatsService.ILekplatsService {
        
        public LekplatsServiceClient() {
        }
        
        public LekplatsServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LekplatsServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LekplatsServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LekplatsServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public LekplatsWebApp.LekplatsService.LekplatsFullständigData[] GetAllaLekplatser() {
            return base.Channel.GetAllaLekplatser();
        }
        
        public System.Threading.Tasks.Task<LekplatsWebApp.LekplatsService.LekplatsFullständigData[]> GetAllaLekplatserAsync() {
            return base.Channel.GetAllaLekplatserAsync();
        }
        
        public LekplatsWebApp.LekplatsService.LekplatsFullständigData GetLekplatsData(int lekplatsId) {
            return base.Channel.GetLekplatsData(lekplatsId);
        }
        
        public System.Threading.Tasks.Task<LekplatsWebApp.LekplatsService.LekplatsFullständigData> GetLekplatsDataAsync(int lekplatsId) {
            return base.Channel.GetLekplatsDataAsync(lekplatsId);
        }
        
        public LekplatsWebApp.LekplatsService.LekplatsFullständigData[] GetLekplatserFrånOmråde(string område) {
            return base.Channel.GetLekplatserFrånOmråde(område);
        }
        
        public System.Threading.Tasks.Task<LekplatsWebApp.LekplatsService.LekplatsFullständigData[]> GetLekplatserFrånOmrådeAsync(string område) {
            return base.Channel.GetLekplatserFrånOmrådeAsync(område);
        }
        
        public bool SkapaLekplats(LekplatsWebApp.LekplatsService.LekplatsData nyLekplats) {
            return base.Channel.SkapaLekplats(nyLekplats);
        }
        
        public System.Threading.Tasks.Task<bool> SkapaLekplatsAsync(LekplatsWebApp.LekplatsService.LekplatsData nyLekplats) {
            return base.Channel.SkapaLekplatsAsync(nyLekplats);
        }
        
        public bool SättBetyg(LekplatsWebApp.LekplatsService.IndividuelltBetygData betyg) {
            return base.Channel.SättBetyg(betyg);
        }
        
        public System.Threading.Tasks.Task<bool> SättBetygAsync(LekplatsWebApp.LekplatsService.IndividuelltBetygData betyg) {
            return base.Channel.SättBetygAsync(betyg);
        }
        
        public string[] GetAllaOmråden() {
            return base.Channel.GetAllaOmråden();
        }
        
        public System.Threading.Tasks.Task<string[]> GetAllaOmrådenAsync() {
            return base.Channel.GetAllaOmrådenAsync();
        }
        
        public bool TaBortLekplats(int LekplatsId) {
            return base.Channel.TaBortLekplats(LekplatsId);
        }
        
        public System.Threading.Tasks.Task<bool> TaBortLekplatsAsync(int LekplatsId) {
            return base.Channel.TaBortLekplatsAsync(LekplatsId);
        }
        
        public bool UppdateraLekplats(LekplatsWebApp.LekplatsService.LekplatsFullständigData inputLekplats) {
            return base.Channel.UppdateraLekplats(inputLekplats);
        }
        
        public System.Threading.Tasks.Task<bool> UppdateraLekplatsAsync(LekplatsWebApp.LekplatsService.LekplatsFullständigData inputLekplats) {
            return base.Channel.UppdateraLekplatsAsync(inputLekplats);
        }
    }
}
